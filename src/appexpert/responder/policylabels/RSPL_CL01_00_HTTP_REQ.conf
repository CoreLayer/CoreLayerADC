# dependency:/src/appexpert/responder/policies/RSP_CL01_00_HTTP_REQ.conf
 add responder policylabel RSPL_CL01_00_HTTP_REQ -policylabeltype HTTP

# Exit the flow if the CS_VSERVER is not configured in SM_CL01_00_L8_CS_CONFIG or LB_VSERVER is not configured in SM_CL01_00_L8_LB_CONFIG
bind responder policylabel RSPL_CL01_00_HTTP_REQ RSP_CL01_00_L8_HTTP_NOT_CONFIGURED 100 END

# dependency:/src/appexpert/responder/policies/RSP_CL01_00_SET_L0.conf
# dependency:/src/appexpert/responder/policylabels/RSPL_CL01_00_HTTP_SET_L0.conf
bind responder policylabel RSPL_CL01_00_HTTP_REQ RSP_CL01_00_SET_L0 101 NEXT -invoke policylabel RSPL_CL01_00_HTTP_SET_L0


# Enter the debugging flow if HTTP Request Header X-CoreLayer-Debug exists
# dependency:/src/appexpert/responder/policies/RSP_CL01_00_HTTP_DEBUG.conf
# dependency:/src/appexpert/responder/policylabels/RSPL_CL01_00_HTTP_DEBUG.conf
bind responder policylabel RSPL_CL01_00_HTTP_REQ RSP_CL01_00_HTTP_DEBUG 201 USE_INVOCATION_RESULT -invoke policylabel RSPL_CL01_00_HTTP_DEBUG



# Verify if the request comes from a legitimate source ip address
# dependency:/src/appexpert/responder/policylabels/RSPL_CL01_00_HTTP_L3_FILTER.conf
bind responder policylabel RSPL_CL01_00_HTTP_REQ RSP_CL01_00_TCP_L3_FILTER 301 USE_INVOCATION_RESULT -invoke policylabel RSPL_CL01_00_HTTP_L3_FILTER


# Check if selected LB is a custom action: VS_REDIR / VS_DROP / VS_RESET / VS_BLOCKED

# Check if maintenance is active

# Check if selected LB is VS_NOSERVICE